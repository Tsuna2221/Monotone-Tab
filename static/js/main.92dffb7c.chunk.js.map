{"version":3,"sources":["assets/MenuButton.svg","assets/Notes.svg","assets/Calendar.svg","assets/Evernote.svg","assets/Mail.svg","assets/Info.svg","assets/Setting.svg","assets/Expand.svg","assets/OptionButton.svg","assets/NoteButton.svg","assets/NoteArrow.svg","config/fbConfig.js","components/Navbar.js","components/Sidebar.js","components/Modals/QuickLinkSettingModal.js","components/Modals/QuickLinkEditModal.js","components/QuickLinks.js","actions/formValidator.js","actions/randomString.js","actions/fbQuery.js","components/FirstStart.js","components/Modals/AddNoteModal.js","components/NewNote.js","components/Modals/AccountModal.js","components/Modals/SidebarModals/Settings.js","components/Modals/SidebarModals/Notes.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Navbar","state","componentDidMount","setInterval","_this","setState","currentTime","handleSubmit","e","preventDefault","input","document","querySelector","value","replace","window","location","href","moment","format","toggleModal","classList","toggle","checkIfLogged","props","isLogged","_this$props$currentPe","currentPerson","displayName","email","react_default","a","createElement","onClick","className","concat","onSubmit","this","autoFocus","type","placeholder","showSidebar","src","MenuButton","alt","Component","Sidebar","showModal","prefix","target","dataset","id","isVisible","style","right","data-type","NotesIcon","Calendar","Evernote","Mail","Info","Setting","Expand","QuickLinkModal","colorSelected","modalColors","colorInput","react_color_lib","presetColors","color","onChangeComplete","handleColor","hex","handleModalInput","key","name","val","Object","defineProperty","handleModalColor","newItemColor","markSelectedColor","showColors","display","handleItem","url","newItemURL","elements","getElementsByClassName","inputName","inputURL","modal","lastNumberInt","lastItem","picker","includes","i","length","updateLinksState","localStorage","setItem","newItemName","htmlFor","onChange","autoComplete","onFocus","QuickLinkEdit","items","data","getItem","push","JSON","parse","selected","nameInput","urlInput","objectSpread","removeItem","spellCheck","QuickLinks","undefined","Cookies","get","set","drawContainer","sort","b","map","itemDet","setTransition","data-id","backgroundColor","substr","toUpperCase","showEditModal","OptionButton","bg","ctrlKey","height","initColumnNo","maxColumns","Math","floor","innerWidth","getLastItems","highestValues","parseInt","max","apply","showNewModal","add","selectedItem","previousSibling","selectedData","closeModal","newModal","editModal","pickerNew","querySelectorAll","forEach","remove","onclick","QuickLinkEditModal","linkColors","QuickLinkSettingModal","lib_default","elementType","options","masonryOptions","gridTemplateColumns","validateUser","validateEmail","test","validatePassword","pass","confirm","checkIfNotNull","body","randString","chars","randomstring","char","random","substring","auth","db","firestore","createNewPerson","password","createUserWithEmailAndPassword","then","res","updateProfile","photoURL","catch","err","console","log","loginPerson","signInWithEmailAndPassword","signOutPerson","signOut","storeNote","uid","Date","getTime","collection","doc","content","createdAt","round","error","FirstStart","handleInput","_e$target","storePerson","_this$state","formValid","isUserValid","isEmailValid","isPassValid","mail","toLowerCase","hideStart","hideText","setTimeout","text","opacity","form","start","transform","required","AddNoteModal","personId","rows","NewNote","addEventListener","event","element","inactive","button","closest","Modals_AddNoteModal","NoteButton","AccountModal","login","SettingsModal","columnInput","maxRange","handleRange","min","container","updateState","NotesModal","drawNotes","notes","note","showContent","ArrowIcon","getElementsByName","App","sidebarVisible","onAuthStateChanged","user","emailVerified","isAnonymous","orderBy","onSnapshot","currentNotes","drawIfFirstStart","components_FirstStart","showNoteButtonIfLogged","components_NewNote","components_Navbar","Modals_AccountModal","components_Sidebar","components_QuickLinks","Settings","SidebarModals_Notes","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.92dffb7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MenuButton.223ae440.svg\";","module.exports = __webpack_public_path__ + \"static/media/Notes.5f0f1500.svg\";","module.exports = __webpack_public_path__ + \"static/media/Calendar.8e868d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/Evernote.3890a5fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mail.006c4744.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.f088f485.svg\";","module.exports = __webpack_public_path__ + \"static/media/Setting.7d2b2e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Expand.0cdb1071.svg\";","module.exports = __webpack_public_path__ + \"static/media/OptionButton.e5d1adcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/NoteButton.09e37ac1.svg\";","module.exports = __webpack_public_path__ + \"static/media/NoteArrow.5c382123.svg\";","import firebase from 'firebase';\r\nrequire(\"firebase/firestore\");\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBXMQSoFkNP62Mg2RZWGi1pKN3KJ2nUJ9s\",\r\n    authDomain: \"monotone-2e5e4.firebaseapp.com\",\r\n    databaseURL: \"https://monotone-2e5e4.firebaseio.com\",\r\n    projectId: \"monotone-2e5e4\",\r\n    storageBucket: \"monotone-2e5e4.appspot.com\",\r\n    messagingSenderId: \"989489159905\"\r\n});\r\n\r\nexport default firebase","import React, { Component } from 'react';\r\nimport moment from \"moment\"\r\n\r\n//Images\r\nimport MenuButton from \"../assets/MenuButton.svg\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar-container\">\r\n                <div className=\"search-bar-container\">\r\n                    <form onSubmit={this.handleSubmit} className=\"search-form\">\r\n                        <input autoFocus className=\"search-input\" type=\"text\" placeholder={'Search on Google'}/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"content-container\">\r\n                    <div className=\"con-date\">\r\n                        <p className=\"con-time\">{this.state.currentTime}</p>\r\n                    </div>\r\n                    \r\n                    {this.checkIfLogged()}\r\n                    <img onClick={this.props.showSidebar} className=\"con-menu\" src={MenuButton} alt=\"\"/>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setInterval(() => {\r\n            this.setState({\r\n                currentTime: this.currentTime()\r\n            })\r\n        },1000);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        var input = document.querySelector('.search-input').value.replace(' ', '+')\r\n        \r\n        window.location.href = \"https://www.google.com/search?q=\" + input\r\n    }\r\n\r\n    currentTime = () => moment().format('hh:mm:ss  |  dddd, Do');\r\n\r\n    toggleModal = () => document.querySelector('.AccountModal').classList.toggle('account-modal-inactive')\r\n    \r\n    checkIfLogged = () => {\r\n        if(this.props.isLogged){\r\n            var {displayName, email} = this.props.currentPerson\r\n            return <p onClick={this.toggleModal} className=\"con-login\">{`Hello, ${displayName || email}!`}</p>\r\n        }else{\r\n            return <p onClick={this.toggleModal} className=\"con-login\">Log In</p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport NotesIcon from \"../assets/Notes.svg\";\r\nimport Calendar from \"../assets/Calendar.svg\";\r\nimport Evernote from \"../assets/Evernote.svg\";\r\nimport Mail from \"../assets/Mail.svg\";\r\nimport Info from \"../assets/Info.svg\";\r\nimport Setting from \"../assets/Setting.svg\";\r\nimport Expand from \"../assets/Expand.svg\";\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <div id='Sidebar'>\r\n                <div className={'sidebar-container sidebar-' + this.props.isVisible} style={{'right': 0}}>\r\n                    <div className=\"sidebar-items\">\r\n                        <div className=\"side-set\">\r\n                            <img onClick={this.showModal} className=\"side-icon note-icon\" data-type=\"Notes\" src={NotesIcon} alt=\"\"/>\r\n                            <img className=\"side-icon calendar-icon\" src={Calendar} alt=\"\"/>\r\n                        </div>\r\n\r\n                        <hr className=\"side-separator\"/>\r\n\r\n                        <div className=\"side-set\">\r\n                            <img className=\"side-icon evernote-icon\" src={Evernote} alt=\"\"/>\r\n                            <img className=\"side-icon mail-icon\" src={Mail} alt=\"\"/>\r\n                        </div>\r\n\r\n                        <hr className=\"side-separator\"/>\r\n\r\n                        <div className=\"side-set\">\r\n                            <img className=\"side-icon info-icon\" src={Info} alt=\"\"/>\r\n                            <img onClick={this.showModal} className=\"side-icon settings-icon\" data-type=\"Settings\" src={Setting} alt=\"\"/>\r\n                            <img className=\"side-icon expand-icon\" src={Expand} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    showModal = (e) => {\r\n        var prefix = e.target.dataset.type\r\n        var modal = document.querySelector(`.${prefix}`)\r\n        \r\n        modal.classList.toggle(`${prefix}-Inactive`)\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nclass QuickLinkModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"new-item-modal\">\r\n                <div className=\"new-item-modal-content\">\r\n                    <div className=\"modal-w\">\r\n                        {this.modalColors()}\r\n                        <h1 className=\"head-w\">Add Quick Link</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemName\" className=\"input-name input\" placeholder=\"Example\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"url\">URL</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemURL\" className=\"input-url input\" placeholder=\"http://www.example.com\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                            <div className=\"input-w\">\r\n                                <input onFocus={this.showColors} onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemColor\" className=\"input-color input\" placeholder=\"#E32018\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\".btn-container-w\">\r\n                        <div onClick={this.handleItem} className=\"btn-w f-w\">Add Link</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        colorSelected:'',\r\n    }\r\n\r\n    modalColors = () => {\r\n        var colorInput = document.querySelector('.input-color') || '#fff'\r\n\r\n        return <SketchPicker className=\"new-sketch\" presetColors={['fff']} color={colorInput} onChangeComplete={ this.handleColor }/>\r\n    }\r\n\r\n    handleColor = (color) => document.querySelector('.input-color').value = color.hex\r\n\r\n    handleModalInput = (e) => {\r\n        var key = e.target.name\r\n        var val = e.target.value\r\n        \r\n        this.setState({\r\n            [key]: val\r\n        })\r\n    }\r\n\r\n    handleModalColor = (e) => {\r\n        var hex = e.target.dataset.color\r\n\r\n        this.setState({\r\n            newItemColor: hex\r\n        })\r\n\r\n        this.markSelectedColor(e)\r\n    }\r\n\r\n    showColors = () => { document.querySelector('.new-sketch').style.display = 'block' }\r\n\r\n    handleItem = () => {\r\n        var url = this.state.newItemURL;\r\n        var elements = document.getElementsByClassName('color-option')\r\n        var inputName = document.querySelector(\".input-name\")\r\n        var inputURL = document.querySelector(\".input-url\")\r\n        var modal = document.querySelector(\".new-item-modal\")\r\n        var lastNumberInt = this.props.lastItem\r\n        var picker = document.querySelector('.new-sketch')\r\n        var colorInput = document.querySelector(\".input-color\")\r\n        var color = colorInput.value;\r\n\r\n        //URL \"parser\"\r\n        if(!url.includes('http')){\r\n            url = 'http://' + url\r\n        }\r\n\r\n        //Unmark Color of offclick\r\n        for(var i = 0; i < elements.length; i++){\r\n            elements[i].className = 'color-option'\r\n        }\r\n\r\n        //Update State\r\n        this.props.updateLinksState()\r\n\r\n        // eslint-disable-next-line\r\n        window.localStorage.setItem('item' + (lastNumberInt + 1), '{ \"name\":'+ '\"' + this.state.newItemName + '\"' +', \"url\":'+ '\"' + url + '\"' +', \"color\":'+ '\"' + color + '\"' +', \"id\": \"item' + (lastNumberInt + 1) + '\"' +'}')\r\n\r\n        //Clear Input Fields\r\n        inputName.value = ''\r\n        inputURL.value = ''\r\n\r\n        //Hide modal\r\n        modal.style.display = 'none'\r\n        picker.style.display = 'none'\r\n    }\r\n}\r\n\r\nexport default QuickLinkModal;","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nclass QuickLinkEdit extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"edit-item-modal\">\r\n                <div className=\"new-item-modal-content\">\r\n                    <div className=\"modal-w\">\r\n                        {this.modalColors()}\r\n                        <h1 className=\"head-w\">Edit Quick Link</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemName\" className=\"input-name edit-name-input\" placeholder=\"Example\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"url\">URL</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemURL\" className=\"input-url edit-url-input\" placeholder=\"http://www.example.com\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                            <div className=\"input-w\">\r\n                                <input onFocus={this.showColors} onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemColor\" className=\"input-colors edit-colors-input\" placeholder=\"#E32018\" value={this.state.color} type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container-w\">\r\n                        <div onClick={this.removeItem} className=\"btn-w\">Remove Link</div>\r\n                        <div onClick={this.handleItem} className=\"btn-w\">Edit Link</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n    \r\n    }\r\n\r\n    modalColors = () => {\r\n        var items = [];\r\n        var colorInput = document.querySelector('.input-colors') || '#fff'\r\n\r\n        for(var data in localStorage){\r\n            if(localStorage.getItem(data)){\r\n                items.push(JSON.parse(localStorage.getItem(data)).color)\r\n            }\r\n        }\r\n        \r\n\r\n        return <SketchPicker presetColors={items} color={colorInput} onChangeComplete = { this.handleColor }/>\r\n    }\r\n    //this.setState({colorSelected: color.hex})\r\n    handleColor = (color) => document.querySelector('.input-colors').value = color.hex\r\n\r\n    handleModalInput = (e) => {\r\n        var key = e.target.name\r\n        var val = e.target.value\r\n\r\n        this.setState({\r\n            [key]: val\r\n        })\r\n    }\r\n\r\n    showColors = () => { document.querySelector('.sketch-picker').style.display = 'block' }\r\n\r\n    markSelectedColor = (e) =>{\r\n        var selected = e.target\r\n        var elements = document.getElementsByClassName('color-option')\r\n\r\n        for(var i = 0; i < elements.length; i++){\r\n            elements[i].className = 'color-option'\r\n        }\r\n\r\n        selected.classList.toggle('color-selected')\r\n    }\r\n\r\n    handleItem = () => {\r\n        var nameInput = document.querySelector(\".edit-name-input\").value\r\n        var urlInput = document.querySelector(\".edit-url-input\").value\r\n        var elements = document.getElementsByClassName('color-option')\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var picker = document.querySelector('.sketch-picker')\r\n        var colorInput = document.querySelector(\".edit-colors-input\")\r\n        var color = colorInput.value;\r\n\r\n        //Reset selected color border\r\n        for(var i = 0; i < elements.length; i++){\r\n            elements[i].className = 'color-option'\r\n        }\r\n\r\n        //Parse http\r\n        if(!urlInput.includes('http')){\r\n            urlInput = 'http://' + urlInput\r\n        }\r\n\r\n        //Hide modal\r\n        modal.style.display = 'none'\r\n        picker.style.display = 'none'\r\n\r\n        //Update State\r\n        this.props.updateLinksState()\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            colorSelected: ''\r\n        })\r\n\r\n        // eslint-disable-next-line\r\n        window.localStorage.setItem(this.props.data.id, '{ \"name\":'+ '\"' + nameInput + '\"' +', \"url\":'+ '\"' + urlInput + '\"' +', \"color\":'+ '\"' + color + '\"' +', \"id\": ' + '\"' + this.props.data.id + '\"' +'}')\r\n    }\r\n\r\n    removeItem = () => {\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var picker = document.querySelector('.sketch-picker')\r\n        \r\n        window.localStorage.removeItem(this.props.data.id)\r\n\r\n        this.props.updateLinksState()\r\n\r\n        modal.style.display = 'none'\r\n        picker.style.display = 'none'\r\n    }\r\n}\r\n\r\nexport default QuickLinkEdit;","import React, { Component } from 'react';\r\nimport p from 'parse-string-data'\r\nimport Cookies from 'js-cookie'\r\nimport Masonry from 'react-masonry-component';\r\n\r\n//Components\r\nimport QuickLinkModal from './Modals/QuickLinkSettingModal'\r\nimport QuickLinkEdit from './Modals/QuickLinkEditModal'\r\n\r\n//Images\r\nimport OptionButton from \"../assets/OptionButton.svg\";\r\n\r\n\r\nclass QuickLinks extends Component {\r\n    render() {\r\n        window.onclick = this.closeModal\r\n        return (\r\n            <div id='QuickLinks'>\r\n                <QuickLinkEdit data={this.state.selectedData} lastItem={this.getLastItems()} updateLinksState={this.updateLinksState} linkColors={this.state.linkColors}/>\r\n                <QuickLinkModal lastItem={this.getLastItems()} updateLinksState={this.updateLinksState} linkColors={this.state.linkColors}/>\r\n\r\n                <div id=\"quick-main-container\">\r\n                    <span className=\"quick-label\">Quick Links</span>\r\n\r\n                    <Masonry\r\n                        elementType={'div'}\r\n                        options={this.state.masonryOptions}\r\n                        className=\"quick-container\" style={{ gridTemplateColumns: 'repeat( '+ this.initColumnNo() +', 245px )' }}>\r\n                        {this.drawContainer()}\r\n                        <div className=\"quick-item-container\">\r\n                            <div data-id=\"new-item\" onClick={this.showNewModal} className=\"quick-item empty-item\">\r\n                                <div className=\"item-let empty-let\">\r\n                                    <span className=\"let-ind\">+</span>\r\n                                </div>\r\n\r\n                                <span className=\"item-name empty-name\">Add New</span>\r\n                            </div>\r\n                        </div>\r\n                    </Masonry>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {}\r\n\r\n    componentDidMount = () => {\r\n        if(Cookies.get('isFirstStart') === undefined){\r\n            Cookies.set('noOfColumns', 4)\r\n        }\r\n    }\r\n\r\n    drawContainer = () => {\r\n        var items = [];\r\n        var sortedItems;\r\n\r\n        for(var data in localStorage){\r\n            if(localStorage.getItem(data) && JSON.parse(localStorage.getItem(data)).name){\r\n                items.push(JSON.parse(localStorage.getItem(data)))\r\n            }\r\n        }\r\n\r\n        sortedItems = items.sort(function(a, b){ return a.id - b.id })\r\n        \r\n        return sortedItems.map(itemDet => {\r\n            if(itemDet !== null){\r\n                return (\r\n                    <div key={itemDet.id} className=\"quick-item-container\">\r\n                        <a onClick={this.setTransition} href={itemDet.url} data-id={itemDet.id} style={{backgroundColor: itemDet.color}} className=\"quick-item\">\r\n                            <div className=\"item-let\">\r\n                                <span className=\"let-ind\">{itemDet.name.substr(0,1).toUpperCase()}</span>\r\n                            </div>\r\n                            <span className=\"item-name\">{itemDet.name}</span>\r\n                        </a>\r\n                        <img onClick={this.showEditModal} data-id=\"item\" className=\"item-option-btn\" src={OptionButton} alt=\"\"/>\r\n                    </div> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    setTransition = (e) => {\r\n        var bg = document.querySelector('.transition-bg')\r\n        if(!e.ctrlKey){\r\n            bg.style.height = '100vh'\r\n        }\r\n    }\r\n\r\n    initColumnNo = () => {\r\n        var maxColumns = Math.floor(window.innerWidth / 245);\r\n        \r\n        if(Cookies.get('noOfColumns') > maxColumns){\r\n            return maxColumns\r\n        }else{\r\n            return Cookies.get('noOfColumns')\r\n        }\r\n    }\r\n\r\n    getLastItems = () => {\r\n        var items = [];\r\n        var highestValues = [];\r\n\r\n        for(var data in localStorage){\r\n            if(localStorage.getItem(data) !== null){\r\n                items.push(JSON.parse(localStorage.getItem(data)))\r\n                highestValues.push(parseInt(data.replace('item', '')))\r\n            }\r\n        }\r\n\r\n        if(localStorage.length < 1){\r\n            return 0\r\n        }else{\r\n            return Math.max.apply(Math, highestValues)\r\n        }\r\n    }\r\n\r\n    updateLinksState = () => {\r\n        var items = []\r\n\r\n        for(var data in localStorage){\r\n            if(localStorage.getItem(data) !== null){\r\n                items.push(p(localStorage.getItem(data)))\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            items: items\r\n        })\r\n    }\r\n\r\n    showNewModal = () => document.querySelector(\".new-item-modal\").classList.add('modal-active')\r\n\r\n    showEditModal = (e) => {\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var selectedItem = JSON.parse(localStorage.getItem(e.target.previousSibling.dataset.id))\r\n        var nameInput = document.querySelector(\".edit-name-input\")\r\n        var urlInput = document.querySelector(\".edit-url-input\")\r\n        var colorInput = document.querySelector(\".edit-colors-input\")\r\n\r\n        this.setState({\r\n            selectedData: selectedItem\r\n        })\r\n\r\n        modal.classList.add('modal-active')\r\n        nameInput.value = selectedItem.name\r\n        urlInput.value = selectedItem.url\r\n        colorInput.value = selectedItem.color\r\n    }\r\n\r\n    closeModal = (e) => {\r\n        var newModal = document.querySelector(\".new-item-modal\")\r\n        var editModal = document.querySelector(\".edit-item-modal\")\r\n        var elements = document.getElementsByClassName('color-option')\r\n        var picker = document.querySelector('.sketch-picker')\r\n        var pickerNew = document.querySelector('.new-sketch')\r\n\r\n        if(e.target === newModal || e.target === editModal){\r\n            var inputs = document.querySelectorAll(\".input\")\r\n\r\n            inputs.forEach(e => { e.value = '' });\r\n\r\n            for(var i = 0; i < elements.length; i++){\r\n                elements[i].className = 'color-option'\r\n            }\r\n\r\n            document.querySelector(\".edit-item-modal\").classList.remove('modal-active')\r\n            document.querySelector(\".new-item-modal\").classList.remove('modal-active')\r\n            \r\n            picker.style.display = 'none'\r\n            pickerNew.style.display = 'none'\r\n        }\r\n    }\r\n}\r\n\r\nexport default QuickLinks;","const validateUser = (input) => {\r\n    if(input && input.length > 4 && !input.includes(' ')){\r\n        return true\r\n    }else if(input.length < 5){\r\n        return false\r\n    }else if(input.includes(' ')){\r\n        return false\r\n    }\r\n}\r\n\r\nconst validateEmail = (email) => {\r\n    // eslint-disable-next-line\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst validatePassword = (pass, confirm) => {\r\n    if(pass === confirm){\r\n        if(pass.length > 7){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst checkIfNotNull = (name, body) => {\r\n    if(name !== undefined){\r\n        if(name !== ''){\r\n            if(body !== undefined){\r\n                if(body !== ''){\r\n                    return true\r\n                }else{\r\n                    return false\r\n                }\r\n            }else{\r\n                return false\r\n            }\r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n}\r\nexport { validateUser, validateEmail, validatePassword, checkIfNotNull };\r\n\r\n","const randString = (length) => {\r\n    var chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\r\n    var randomstring = ''\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        var char = Math.floor(Math.random() * chars.length);\r\n        randomstring += chars.substring(char,char+1);\r\n    }\r\n\r\n    return randomstring\r\n}\r\n\r\nexport default randString;","import firebase from '../config/fbConfig'\r\nimport randString from './randomString'\r\n\r\nconst auth = firebase.auth()\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst createNewPerson = (name, email, password) => {\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            res.updateProfile({displayName: name, photoURL: null})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nconst loginPerson = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nconst signOutPerson = () => {\r\n    auth.signOut().then(function() {\r\n        console.log('user logged out')\r\n    }).catch(function(err) {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\nconst storeNote = (name, body, uid) => {\r\n    var currentTime = new Date().getTime();\r\n\r\n    db.collection(\"person\").doc(uid).collection('notes').add({\r\n        name: name,\r\n        content: body,\r\n        id: randString(5),\r\n        createdAt: Math.round(currentTime / 1000)\r\n    })\r\n    .then(function(res) {\r\n        console.log(\"Document written with ID: \", res);\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n}\r\n\r\nexport { createNewPerson, loginPerson, signOutPerson, storeNote };","import React, { Component } from 'react';\r\nimport { validateUser, validateEmail, validatePassword } from '../actions/formValidator'\r\nimport { createNewPerson } from '../actions/fbQuery'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nclass FirstStart extends Component {\r\n    render() {\r\n        this.hideText()\r\n        return (\r\n            <div id='FirstStart'>\r\n                <div className=\"welcome no2\">\r\n                    <div id=\"text\">\r\n                        <h1 className=\"welcome-text\">Welcome to Monotone!</h1>\r\n                    </div>\r\n\r\n                    <div className=\"form-signup-container\">\r\n                        <form name=\"signup\">\r\n                            <h1>Sign Up</h1>\r\n                            <h2>To optimize your experience and use widgets, <br/>please, consider signing up.</h2>\r\n                            <div className=\"sign-label signup-name\">\r\n                                <label className=\"signup-label\" htmlFor=\"name\">User Name</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-name\" name=\"name\" type=\"text\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"sign-label signup-email\">\r\n                                <label className=\"signup-label\" htmlFor=\"email\">Email</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-email\" name=\"email\" type=\"email\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>  \r\n\r\n                            <div className=\"sign-label signup-password\">\r\n                                <label className=\"signup-label\" htmlFor=\"password\">Password</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-password\" name=\"password\" type=\"password\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"sign-label signup-confirm-password\">\r\n                                <label className=\"signup-label\" htmlFor=\"confirm-password\">Confirm Password</label>  \r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-confirm\" name=\"confirm\" type=\"password\" required/>   \r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"signup-buttons\">\r\n                                <div onClick={this.hideStart} className=\"sign-guest-btn sign-btn\">\r\n                                    <p>Enter as Guest</p>\r\n                                </div>\r\n\r\n                                <div onClick={this.storePerson} className=\"sign-confirm-btn sign-btn\">\r\n                                    <p>Sign Up</p>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        var {name, value} = e.target\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    storePerson = () => {\r\n        var {name, email, password, confirm} = this.state\r\n        var formValid = {}\r\n        \r\n        if(name){ \r\n            if(validateUser(name)){ formValid.isUserValid = true }\r\n        }\r\n\r\n        if(email){ \r\n            if(validateEmail(email)){ formValid.isEmailValid = true }\r\n        }\r\n\r\n        if(password){\r\n            if(confirm){ \r\n                if(validatePassword(password, confirm)){ formValid.isPassValid = true }\r\n            }\r\n        }\r\n\r\n        if(formValid.isUserValid && formValid.isEmailValid && formValid.isPassValid){\r\n            var mail = email.toLowerCase()\r\n\r\n            createNewPerson(name, mail, password)\r\n\r\n            this.hideStart()\r\n        }\r\n    }\r\n\r\n    hideText = () => {\r\n        setTimeout(() => {\r\n            var text = document.querySelector('.welcome-text');\r\n            var form = document.querySelector('.form-signup-container') \r\n\r\n            form.style.display = 'flex'\r\n            text.style.opacity = 0\r\n            \r\n            setTimeout(() => {\r\n                var form = document.querySelector('.form-signup-container') \r\n                form.style.opacity = 1\r\n                form.style.display = 'flex'\r\n            }, 1500)\r\n\r\n        }, 4000);\r\n    }\r\n\r\n    hideStart = () => {\r\n        var start = document.querySelector('#FirstStart') \r\n        var form = document.querySelector('.form-signup-container') \r\n        form.style.opacity = 0\r\n\r\n        setTimeout(() => {\r\n            start.style.transform = 'translateX(-100%)'\r\n\r\n            setTimeout(() => {\r\n                start.style.display = 'none'\r\n                Cookies.set('isFirstStart', false)\r\n            },2000)\r\n        },1500)\r\n    }\r\n}\r\n\r\nexport default FirstStart;","import React, { Component } from 'react';\r\n\r\n//Actions\r\nimport { storeNote } from '../../actions/fbQuery'\r\nimport { checkIfNotNull } from '../../actions/formValidator'\r\n\r\nclass AddNoteModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='AddNoteModal note-modal-inactive'>\r\n                <div className=\"modal-w\">\r\n                    <h1 className=\"head-w\">New Note</h1>\r\n\r\n                    <div className=\"field-w\">\r\n                        <label className=\"label-w\">Note Name</label>\r\n                        <div className=\"input-w input-w175\">\r\n                            <input onChange={this.handleInput} placeholder=\"Note Example\" autoComplete=\"off\" spellCheck=\"false\" name='name' type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"field-w\">\r\n                        <label className=\"label-w\">Note Content</label>\r\n                        <div className=\"input-area-w input-a175\">\r\n                            <textarea onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" name='body' type=\"text\" rows=\"7\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn-container-w\">\r\n                    <div onClick={this.storeNote} className=\"btn-w f-w\">Add Note</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {}\r\n\r\n    handleInput = (e) => {\r\n        var key = e.target.name;\r\n        var body = e.target.value;\r\n\r\n        this.setState({\r\n            [key]: body\r\n        })\r\n    }\r\n\r\n    storeNote = () => {\r\n        var name = this.state.name;\r\n        var body = this.state.body;\r\n        var personId = this.props.currentPerson.uid\r\n        var modal = document.querySelector('.AddNoteModal')\r\n        \r\n        if(checkIfNotNull(name, body) === true){storeNote(name, body, personId); modal.classList.toggle('note-modal-inactive')}\r\n    }\r\n}\r\n\r\nexport default AddNoteModal;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport NoteButton from \"../assets/NoteButton.svg\";\r\nimport AddNoteModal from \"./Modals/AddNoteModal\"\r\n\r\nclass NewNote extends Component {\r\n    render() {\r\n        return (\r\n            <div className='NewNote'>\r\n                <AddNoteModal currentPerson={this.props.currentPerson}/>\r\n                <div onClick={this.toggleModal} className=\"new-note-btn\">\r\n\t\t\t\t\t<img src={NoteButton} alt=\"\"/>\r\n\t\t\t\t</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'note-modal-inactive'\r\n            var element = document.querySelector('.AddNoteModal')\r\n            var inactive = document.querySelector('.note-modal-inactive')\r\n            var button = document.querySelector('.new-note-btn')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".AddNoteModal\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    toggleModal = () => document.querySelector('.AddNoteModal').classList.toggle('note-modal-inactive')\r\n}\r\n\r\nexport default NewNote;","import React, { Component } from 'react';\r\n\r\n//Actions\r\nimport { loginPerson, signOutPerson } from '../../actions/fbQuery'\r\n\r\nclass AccountModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='AccountModal account-modal-inactive'>\r\n                {this.checkIfLogged()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'account-modal-inactive'\r\n            var element = document.querySelector('.AccountModal')\r\n            var inactive = document.querySelector('.account-modal-inactive')\r\n            var button = document.querySelector('.con-login')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".AccountModal\")){\r\n                element.classList.toggle(prefix)\r\n            };\r\n        });\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        var key = e.target.name\r\n        var value = e.target.value\r\n\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        var {email, password} = this.state\r\n        loginPerson(email, password)\r\n    }\r\n\r\n    checkIfLogged = () => {\r\n        if(this.props.isLogged){\r\n            return (\r\n                <div className=\"account-container\">\r\n                    <div className=\"account-buttons\">\r\n                        <div onClick={signOutPerson} className=\"account-btn signout-btn\">Sign Out</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"account-container\">\r\n                    <div className=\"account-field account-email\">\r\n                        <label htmlFor=\"account-email\">Email</label>\r\n                        <div className=\"account-email-input\">\r\n                            <input onChange={this.handleInput} name=\"email\" type=\"email\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"account-field account-password\">\r\n                        <label htmlFor=\"account-password\">Password</label>\r\n                        <div className=\"account-password-input\">\r\n                            <input onChange={this.handleInput} name=\"password\" type=\"password\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"account-buttons\">\r\n                        <div onClick={this.login} className=\"account-btn login-btn\">Log In</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AccountModal;","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie'\r\n\r\nclass SettingsModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Settings Settings-Inactive modal-g'>\r\n                <div className=\"settings-container\">\r\n                    <div className=\"modal-w\">\r\n                        <h1 className=\"head-w\">Settings</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Columns</label>\r\n                            <div className=\"range-w\">\r\n                                {this.columnInput()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var range = document.querySelector(\".column-range\")\r\n        range.value = Cookies.get('noOfColumns')\r\n\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'Settings-Inactive'\r\n            var element = document.querySelector('.Settings')\r\n            var inactive = document.querySelector('.Settings-Inactive')\r\n            var button = document.querySelector('.settings-icon')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".Settings\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    columnInput = () => {\r\n        var maxRange = Math.floor(window.innerWidth / 245)\r\n        \r\n        return <input onChange={this.handleRange} type=\"range\" min=\"1\" max={maxRange} name=\"column-range\" className=\"column-range\"/>\r\n    }\r\n\r\n    handleRange = (e) => {\r\n        var container = document.querySelector(\".quick-container\")\r\n\r\n        Cookies.set('noOfColumns', e.target.value)\r\n\r\n        this.props.updateState()\r\n        container.style.gridTemplateColumns = \"repeat(\"+ e.target.value +\", 245px)\"\r\n    }\r\n}\r\n\r\nexport default SettingsModal;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport ArrowIcon from '../../../assets/NoteArrow.svg'\r\n\r\nclass NotesModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Notes Notes-Inactive modal-g'>\r\n                <div className=\"notes-container\">\r\n                    <p>Notes</p>\r\n                    {this.drawNotes()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'Notes-Inactive'\r\n            var element = document.querySelector('.Notes')\r\n            var inactive = document.querySelector('.Notes-Inactive')\r\n            var button = document.querySelector('.note-icon')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".Notes\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    drawNotes = () => {\r\n        var notes = this.props.notes\r\n        if(notes){\r\n            if(notes.length > 0){\r\n                return notes.map(note => {\r\n                    var { name, content, id } = note\r\n                    return (\r\n                        <div key={id} className=\"note-item\">\r\n                            <div className=\"note-cell\" >\r\n                                <img data-id={id} onClick={this.showContent} className=\"note-arrow\" src={ArrowIcon} alt=\"\"/>\r\n                                <div className=\"note-title\">\r\n                                    <p>{name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div name={id} className=\"note-content\">\r\n                                <p>{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                });\r\n            }else{\r\n                return <p>No notes found.</p>\r\n            }\r\n        }else if(notes === undefined){\r\n            return <p>Loading notes...</p>\r\n        }\r\n    }\r\n\r\n    showContent = (e) => {\r\n        var id = e.target.dataset.id\r\n        var content = document.getElementsByName(id)[0]\r\n\r\n        content.classList.toggle('note-content-active')\r\n        e.target.classList.toggle('note-arrow-active')\r\n    }\r\n}\r\n\r\nexport default NotesModal;","import React, { Component } from 'react';\nimport Cookies from 'js-cookie'\nimport firebase from './config/fbConfig'\n\n//Components\nimport Navbar from './components/Navbar'\nimport Sidebar from './components/Sidebar'\nimport QuickLinks from './components/QuickLinks'\nimport FirstStart from './components/FirstStart'\nimport NewNote from './components/NewNote'\n\n//Modals\nimport AccountModal from './components/Modals/AccountModal'\nimport SettingsModal from './components/Modals/SidebarModals/Settings'\nimport NotesModal from './components/Modals/SidebarModals/Notes'\n\nconst db = firebase.firestore();\n\nclass App extends Component {\n\trender() {\n\t\tthis.drawIfFirstStart()\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.drawIfFirstStart()}\n\t\t\t\t<Navbar isLogged={this.state.isLogged} currentPerson={this.state.currentPerson} isVisible={this.state.sidebarVisible} showSidebar={this.showSidebar}/>\n\t\t\t\t<AccountModal isLogged={this.state.isLogged} currentPerson={this.state.currentPerson} />\n\t\t\t\t<Sidebar isVisible={this.state.sidebarVisible}/>\n\t\t\t\t<QuickLinks/>\n\n\t\t\t\t{/* Sidebar Modals */}\n\t\t\t\t<SettingsModal updateState={this.updateState}/>\n\t\t\t\t<NotesModal notes={this.state.currentNotes}/>\n\t\t\t\t{this.showNoteButtonIfLogged()}\n\t\t\t\t<div className=\"transition-bg\"></div>\n\t\t\t</div>\t\t\t\n\t\t);\n\t}\n\n\tstate = {\n\t\t'sidebarVisible': 'inactive',\n\t}\n\n\tcomponentDidMount = () => {\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user){\n\t\t\t\tvar { email, emailVerified, uid, isAnonymous, displayName } = user\n\t\t\t\tvar notesCollection = db.collection('person').doc(uid).collection('notes').orderBy('createdAt', 'desc')\n\t\t\t\t//.orderBy(\"body\", \"asc\")\n\t\t\t\t\n\t\t\t\tnotesCollection.onSnapshot(res => {\n\t\t\t\t\tvar notes = [];\n\t\t\t\t\tres.forEach(data => {\n\t\t\t\t\t\tnotes.push(data.data())\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\tcurrentNotes: notes\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\tthis.setState({\n\t\t\t\t\t...this.state,\n\t\t\t\t\tisLogged: true,\n\t\t\t\t\tcurrentPerson: {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\temailVerified,\n\t\t\t\t\t\tuid,\n\t\t\t\t\t\tisAnonymous,\n\t\t\t\t\t\tdisplayName,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLogged: false\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\t\n\tdrawIfFirstStart = () => {\n\t\tif(Cookies.get('isFirstStart') === undefined){\n\t\t\treturn <FirstStart/>\n\t\t}\n\t}\n\n\tshowSidebar = () => {\n\t\tif(this.state.sidebarVisible === 'inactive'){\n\t\t\tthis.setState({\n\t\t\t\t'sidebarVisible': 'active'\n\t\t\t})\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\t'sidebarVisible': 'inactive'\n\t\t\t})\n\t\t}\n\t}\n\n\tupdateState = () => {\n\t\t\tthis.setState({\n\t\t\t\t...this.state\n\t\t\t})\n\t}\n\n\tshowNoteButtonIfLogged = () => {\n\t\tif(this.state.isLogged){\n\t\t\treturn <NewNote isLogged={this.state.isLogged} currentPerson={this.state.currentPerson}/>\n\t\t}\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/Main.css';\nimport './styles/App.css';\nimport './styles/Navbar.css';\nimport './styles/QLModal.css';\nimport './styles/QuickLinks.css';\nimport './styles/Sidebar.css';\nimport './styles/FirstStart.css';\nimport './styles/SettingsModal.css';\nimport './styles/AccountModal.css';\nimport './styles/NewNoteModal.css';\nimport './styles/NotesModal.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}