{"version":3,"sources":["assets/MenuButton.svg","assets/Notes.svg","assets/Calendar.svg","assets/Evernote.svg","assets/Mail.svg","assets/Info.svg","assets/Setting.svg","assets/Expand.svg","assets/CollapseArrow.svg","assets/NoteButton.svg","assets/NoteArrow.svg","config/fbConfig.js","components/Navbar.js","components/Sidebar.js","actions/formValidator.js","actions/storageActions.js","components/Modals/QuickLinkSettingModal.js","components/Modals/QuickLinkEditModal.js","components/Modals/NewFolderModal.js","components/Modals/EditFolderModal.js","components/Folders.js","components/QuickLinks.js","actions/randomString.js","actions/fbQuery.js","components/FirstStart.js","components/NewNote.js","components/Modals/AddNoteModal.js","components/Modals/AccountModal.js","components/Modals/SidebarModals/Prompt.js","components/Modals/SidebarModals/Settings.js","components/Modals/SidebarModals/Notes.js","App.js","index.js","assets/OptionButton.svg"],"names":["module","exports","__webpack_require__","p","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Navbar","state","componentDidMount","setInterval","_this","setState","currentTime","handleSubmit","e","preventDefault","input","document","querySelector","value","replace","window","location","href","moment","format","toggleModal","classList","toggle","checkIfLogged","props","isLogged","react_default","a","createElement","onClick","className","currentPerson","displayName","email","onSubmit","this","autoFocus","type","placeholder","showSidebar","src","MenuButton","alt","Component","Sidebar","showModal","prefix","target","dataset","concat","id","isVisible","style","right","data-type","NotesIcon","Calendar","Evernote","Mail","Info","Setting","Expand","checkIfNotNull","name","body","undefined","validateLinks","url","color","validateFolder","validateStartForm","form","password","confirm","formValid","length","includes","isUserValid","test","validateEmail","isEmailValid","pass","validatePassword","isPassValid","returnFolders","items","data","localStorage","getItem","JSON","parse","push","sort","b","parseInt","returnLinks","currentFolder","folder","returnLastFolder","returnLastLink","highestValues","QuickLinkModal","colorSelected","folders","newItemFolder","drawFolderOptions","map","key","modalColors","react_color_lib","newItemColor","onChangeComplete","handleColor","hex","handleModalInput","Object","defineProperty","handleModalColor","showColors","display","handleItem","_this$state","newItemName","newItemURL","modal","lastNumberInt","lastItem","picker","updateLinksState","setItem","htmlFor","onChange","autoComplete","onFocus","QuickLinkEdit","nameInput","urlInput","folderInput","remove","objectSpread","removeItem","spellCheck","NewFolder","folderColor","closeModal","handleInput","getLastItems","Math","max","apply","addFolder","updateState","EditFolder","editFolder","colorInput","folderId","removeFolder","folderItems","forEach","item","Folders","drawFolders","itemDet","setCurrentFolder","data-id","backgroundColor","substr","toUpperCase","toggleEditModal","OptionButton","collapseFolders","arrow","_JSON$parse","inputName","inputColor","idToEdit","_this2","NewFolderModal","EditFolderModal","Arrow","QuickLinks","Cookies","get","set","drawContainer","setTransition","showEditModal","ctrlKey","height","setLabel","initColumnNo","floor","innerWidth","showNewModal","selectedItem","previousSibling","selectedData","add","newModal","editModal","pickerNew","querySelectorAll","onclick","QuickLinkEditModal","getFolders","linkColors","QuickLinkSettingModal","selectedFolder","components_Folders","lib_default","elementType","options","masonryOptions","gridTemplateColumns","randString","chars","randomstring","i","char","random","substring","auth","db","firestore","createNewPerson","createUserWithEmailAndPassword","then","res","updateProfile","photoURL","catch","err","console","log","loginPerson","signInWithEmailAndPassword","signOutPerson","signOut","storeNote","uid","Date","getTime","collection","doc","content","createdAt","round","error","exportBackup","storage","currentUser","backup","stringify","importBackup","update","FirstStart","storePerson","toLowerCase","hideStart","hideText","setTimeout","text","opacity","start","transform","required","NewNote","addEventListener","event","element","inactive","button","closest","NoteButton","AddNoteModal","personId","rows","AccountModal","login","_this$props$currentPe","Prompt","execPrompt","_this$props$promptTex","promptText","fnc1","fnc2","fncType","fnc","drawButtons","_this$props$promptTex2","num1","num2","data-fnc","_this$props$promptTex3","head","label","SettingsModal","columnInput","handleRange","min","container","togglePrompt","prompt","setText","clear","SidebarModals_Prompt","NotesModal","drawNotes","notes","note","showContent","ArrowIcon","getElementsByName","App","sidebarVisible","onAuthStateChanged","user","emailVerified","isAnonymous","orderBy","onSnapshot","currentNotes","drawIfFirstStart","components_FirstStart","showNoteButtonIfLogged","components_NewNote","components_Navbar","components_Sidebar","components_QuickLinks","Modals_AddNoteModal","Modals_AccountModal","Settings","SidebarModals_Notes","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.970cf266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MenuButton.223ae440.svg\";","module.exports = __webpack_public_path__ + \"static/media/Notes.5f0f1500.svg\";","module.exports = __webpack_public_path__ + \"static/media/Calendar.8e868d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/Evernote.3890a5fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mail.006c4744.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.f088f485.svg\";","module.exports = __webpack_public_path__ + \"static/media/Setting.7d2b2e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Expand.0cdb1071.svg\";","module.exports = __webpack_public_path__ + \"static/media/CollapseArrow.71902d2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/NoteButton.09e37ac1.svg\";","module.exports = __webpack_public_path__ + \"static/media/NoteArrow.5c382123.svg\";","import firebase from 'firebase';\r\nrequire(\"firebase/firestore\");\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBXMQSoFkNP62Mg2RZWGi1pKN3KJ2nUJ9s\",\r\n    authDomain: \"monotone-2e5e4.firebaseapp.com\",\r\n    databaseURL: \"https://monotone-2e5e4.firebaseio.com\",\r\n    projectId: \"monotone-2e5e4\",\r\n    storageBucket: \"monotone-2e5e4.appspot.com\",\r\n    messagingSenderId: \"989489159905\"\r\n});\r\n\r\nexport default firebase","import React, { Component } from 'react';\r\nimport moment from \"moment\"\r\n\r\n//Images\r\nimport MenuButton from \"../assets/MenuButton.svg\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar-container\">\r\n                <div className=\"search-bar-container\">\r\n                    <form onSubmit={this.handleSubmit} className=\"search-form\">\r\n                        <input autoFocus className=\"search-input\" type=\"text\" placeholder={'Search on Google'}/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"content-container\">\r\n                    <div className=\"con-date\">\r\n                        <p className=\"con-time\">{this.state.currentTime}</p>\r\n                    </div>\r\n                    \r\n                    {this.checkIfLogged()}\r\n                    <img onClick={this.props.showSidebar} className=\"con-menu\" src={MenuButton} alt=\"\"/>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        \r\n    }\r\n\r\n    componentDidMount = () => setInterval(() => {this.setState({currentTime: this.currentTime()})}, 1000);\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        var input = document.querySelector('.search-input').value.replace(' ', '+')\r\n        \r\n        window.location.href = \"https://www.google.com/search?q=\" + input\r\n    }\r\n\r\n    currentTime = () => moment().format('hh:mm:ss  |  dddd, Do');\r\n\r\n    toggleModal = () => document.querySelector('.AccountModal').classList.toggle('account-modal-inactive')\r\n    \r\n    checkIfLogged = () => this.props.isLogged === true ? \r\n    <p onClick={this.toggleModal} className=\"con-login\">{'Hello, ' + this.props.currentPerson.displayName || this.props.currentPerson.email}</p> :\r\n    <p onClick={this.toggleModal} className=\"con-login\">Log In</p>\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport NotesIcon from \"../assets/Notes.svg\";\r\nimport Calendar from \"../assets/Calendar.svg\";\r\nimport Evernote from \"../assets/Evernote.svg\";\r\nimport Mail from \"../assets/Mail.svg\";\r\nimport Info from \"../assets/Info.svg\";\r\nimport Setting from \"../assets/Setting.svg\";\r\nimport Expand from \"../assets/Expand.svg\";\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <div id='Sidebar'>\r\n                <div className={'sidebar-container sidebar-' + this.props.isVisible} style={{'right': 0}}>\r\n                    <div className=\"sidebar-items\">\r\n                        <div className=\"side-set\">\r\n                            <img onClick={this.showModal} className=\"side-icon note-icon\" data-type=\"Notes\" src={NotesIcon} alt=\"\"/>\r\n                            <img className=\"side-icon calendar-icon\" src={Calendar} alt=\"\"/>\r\n                        </div>\r\n\r\n                        <hr className=\"side-separator\"/>\r\n\r\n                        <div className=\"side-set\">\r\n                            <img className=\"side-icon evernote-icon\" src={Evernote} alt=\"\"/>\r\n                            <img className=\"side-icon mail-icon\" src={Mail} alt=\"\"/>\r\n                        </div>\r\n\r\n                        <hr className=\"side-separator\"/>\r\n\r\n                        <div className=\"side-set\">\r\n                            <img className=\"side-icon info-icon\" src={Info} alt=\"\"/>\r\n                            <img onClick={this.showModal} className=\"side-icon settings-icon\" data-type=\"Settings\" src={Setting} alt=\"\"/>\r\n                            <img className=\"side-icon expand-icon\" src={Expand} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    showModal = (e) => {\r\n        var prefix = e.target.dataset.type\r\n        var modal = document.querySelector(`.${prefix}`)\r\n        \r\n        modal.classList.toggle(`${prefix}-Inactive`)\r\n    }\r\n}\r\n\r\nexport default Sidebar;","const validateUser = (input) => {\r\n    if(input && input.length > 4 && !input.includes(' ')){\r\n        return true\r\n    }else if(input.length < 5){\r\n        return false\r\n    }else if(input.includes(' ')){\r\n        return false\r\n    }\r\n}\r\n\r\nconst validateEmail = (email) => {\r\n    // eslint-disable-next-line\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst validatePassword = (pass, confirm) => {\r\n    if(pass === confirm){\r\n        if(pass.length > 7){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst checkIfNotNull = (name, body) => {\r\n    if(name !== undefined){\r\n        if(name !== ''){\r\n            if(body !== undefined){\r\n                if(body !== ''){\r\n                    return true\r\n                }else{\r\n                    return false\r\n                }\r\n            }else{\r\n                return false\r\n            }\r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst validateLinks = (name, url, color) => {\r\n    if(name && url && color){\r\n        if(name !== '' && url !== '' && url !== ''){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst validateFolder = (name, color) => {\r\n    if(name !== '' && color !== ''){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst validateStartForm = (form) => {\r\n    var { name, email, password, confirm } = form\r\n    var formValid = {}\r\n    \r\n    if(name){ \r\n        if(validateUser(name)){ formValid.isUserValid = true }\r\n    }\r\n\r\n    if(email){ \r\n        if(validateEmail(email)){ formValid.isEmailValid = true }\r\n    }\r\n\r\n    if(password){\r\n        if(confirm){ \r\n            if(validatePassword(password, confirm)){ formValid.isPassValid = true }\r\n        }\r\n    }\r\n\r\n    if(formValid.isUserValid && formValid.isEmailValid && formValid.isPassValid){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport { validateUser, validateEmail, validatePassword, checkIfNotNull, validateLinks, validateFolder , validateStartForm};\r\n\r\n","const returnFolders = () => {\r\n    var items = [];\r\n\r\n    for(var data in localStorage){\r\n        if(data.includes('folder')){\r\n            if(localStorage.getItem(data) && JSON.parse(localStorage.getItem(data)).name){\r\n                items.push(JSON.parse(localStorage.getItem(data)))\r\n            }\r\n        }\r\n    }\r\n\r\n    return items.sort((a, b) => parseInt(a.id.replace(/\\D/g ,'')) - parseInt(b.id.replace(/\\D/g ,'')))\r\n}\r\n\r\nconst returnLinks = (currentFolder) => {\r\n    var items = [];\r\n        \r\n    for(var data in localStorage){\r\n        if(data.includes('item') ){\r\n            var itemIndex = JSON.parse(localStorage.getItem(data)).folder\r\n            if(itemIndex === currentFolder){\r\n                items.push(JSON.parse(localStorage.getItem(data)))\r\n            }\r\n        }\r\n    }\r\n\r\n    return items.sort((a, b) => parseInt(a.id.replace(/\\D/g ,'')) - parseInt(b.id.replace(/\\D/g ,'')))\r\n}\r\n\r\nconst returnLastFolder = () => {\r\n    var items = []\r\n    for(var data in localStorage){\r\n        if(data.includes('folder')){\r\n            if(localStorage.getItem(data) !== null){\r\n                items.push(parseInt(data.replace('folder', '')))\r\n            }\r\n        }\r\n    }\r\n\r\n    return items\r\n}\r\n\r\nconst returnLastLink = () => {\r\n    var items = [];\r\n    var highestValues = [];\r\n\r\n    for(var data in localStorage){\r\n        if(data.includes('item')){\r\n            if(localStorage.getItem(data) !== null){\r\n                items.push(JSON.parse(localStorage.getItem(data)))\r\n                highestValues.push(parseInt(data.replace('item', '')))\r\n            }\r\n        }\r\n    }\r\n\r\n    return {items, highestValues}\r\n}\r\n\r\nexport {returnFolders, returnLinks, returnLastLink, returnLastFolder}","import React, { Component } from 'react';\r\nimport { validateLinks } from '../../actions/formValidator'\r\nimport { SketchPicker } from 'react-color';\r\nimport { returnFolders } from '../../actions/storageActions'\r\n\r\nclass QuickLinkModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"new-item-modal\">\r\n                <div className=\"new-item-modal-content\">\r\n                    <div className=\"modal-w\">\r\n                        {this.modalColors()}\r\n                        <h1 className=\"head-w\">Add Quick Link</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemName\" className=\"input-name input\" placeholder=\"Example\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"url\">URL</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemURL\" className=\"input-url input\" placeholder=\"http://www.example.com\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"folder\">Folder</label>\r\n                            <div className=\"input-w\">\r\n                                <select onChange={this.handleModalInput} name=\"newItemFolder\" className=\"input-folder select-w\">\r\n                                    <option value='default'>Main</option>\r\n                                    {this.drawFolderOptions()}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                            <div className=\"input-w\">\r\n                                <input onFocus={this.showColors} onChange={this.handleModalInput} autoComplete=\"off\" name=\"newItemColor\" className=\"input-color input\" placeholder=\"#E32018\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\".btn-container-w\">\r\n                        <div onClick={this.handleItem} className=\"btn-w f-w\">Add Link</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        colorSelected:'',\r\n        folders: [],\r\n        newItemFolder: 'default'\r\n    }\r\n\r\n    drawFolderOptions = () => returnFolders().map(folder => <option key={folder.id} value={folder.id}>{folder.name}</option>)\r\n\r\n    modalColors = () => <SketchPicker className=\"new-sketch\" color={this.state.newItemColor} onChangeComplete={ this.handleColor }/>\r\n    // eslint-disable-next-line\r\n    handleColor = (color) => (document.querySelector('.input-color').value = color.hex, this.setState({newItemColor: color.hex}))\r\n\r\n    handleModalInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    handleModalColor = (e) => this.setState({newItemColor: e.target.dataset.color})\r\n\r\n    showColors = () => { document.querySelector('.new-sketch').style.display = 'block' }\r\n\r\n    handleItem = () => {\r\n        var { newItemName, newItemURL, newItemFolder, newItemColor } = this.state\r\n        var modal = document.querySelector(\".new-item-modal\")\r\n        var lastNumberInt = this.props.lastItem\r\n        var picker = document.querySelector('.new-sketch')\r\n        var colorInput = document.querySelector(\".input-color\")\r\n        var color = colorInput.value;\r\n\r\n        if(validateLinks(newItemName, newItemURL, newItemColor) === true){\r\n            //URL \"parser\"\r\n            if(!newItemURL.includes('http')){\r\n                newItemURL = 'http://' + newItemURL\r\n            }\r\n\r\n            //Update State\r\n            this.props.updateLinksState()\r\n\r\n            // eslint-disable-next-line\r\n            window.localStorage.setItem('item' + (lastNumberInt + 1), '{ \"name\":'+ '\"' + newItemName + '\"' +', \"url\":'+ '\"' + newItemURL + '\"' +', \"folder\": \"'+ newItemFolder +'\", \"color\":'+ '\"' + color + '\"' +', \"id\": \"item' + (lastNumberInt + 1) + '\"' +'}')\r\n\r\n            //Hide modal\r\n            modal.classList.toggle('modal-active')\r\n            picker.style.display = 'none'\r\n        }\r\n    }\r\n}\r\n\r\nexport default QuickLinkModal;","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nimport {returnFolders} from '../../actions/storageActions'\r\n\r\nclass QuickLinkEdit extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"edit-item-modal\">\r\n                <div className=\"new-item-modal-content\">\r\n                    <div className=\"modal-w\">\r\n                        {this.modalColors()}\r\n                        <h1 className=\"head-w\">Edit Quick Link</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemName\" className=\"input-name edit-name-input\" placeholder=\"Example\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"url\">URL</label>\r\n                            <div className=\"input-w\">\r\n                                <input onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemURL\" className=\"input-url edit-url-input\" placeholder=\"http://www.example.com\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"folder\">Folder</label>\r\n                            <div className=\"input-w\">\r\n                                <select onChange={this.handleModalInput} name=\"newItemFolder\" className=\"input-folder edit-folder-input select-w\">\r\n                                    <option value='default'>Main</option>\r\n                                    {this.drawFolderOptions()}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                            <div className=\"input-w\">\r\n                                <input onFocus={this.showColors} onChange={this.handleModalInput} spellCheck=\"false\" autoComplete=\"off\" name=\"newItemColor\" className=\"input-colors edit-colors-input\" placeholder=\"#E32018\" value={this.state.color} type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container-w\">\r\n                        <div onClick={this.removeItem} className=\"btn-w\">Remove Link</div>\r\n                        <div onClick={this.handleItem} className=\"btn-w\">Edit Link</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n    \r\n    }\r\n\r\n    modalColors = () => <SketchPicker color='#fff' onChangeComplete = { this.handleColor }/>\r\n\r\n    handleColor = (color) => document.querySelector('.input-colors').value = color.hex\r\n\r\n    handleModalInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    showColors = () => { document.querySelector('.sketch-picker').style.display = 'block' }\r\n\r\n    drawFolderOptions = () => returnFolders().map(folder => <option key={folder.id} value={folder.id}>{folder.name}</option>)\r\n\r\n    handleItem = () => {\r\n        var nameInput = document.querySelector(\".edit-name-input\").value\r\n        var urlInput = document.querySelector(\".edit-url-input\").value\r\n        var folderInput = document.querySelector(\".edit-folder-input\").value\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var picker = document.querySelector('.sketch-picker')\r\n        var colorInput = document.querySelector(\".edit-colors-input\")\r\n        var color = colorInput.value;\r\n\r\n        //Parse http\r\n        if(!urlInput.includes('http')){\r\n            urlInput = 'http://' + urlInput\r\n        }\r\n\r\n        //Hide modal\r\n        modal.classList.remove('modal-active')\r\n        picker.style.display = 'none'\r\n\r\n        //Update State\r\n        this.props.updateLinksState()\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            colorSelected: ''\r\n        })\r\n\r\n        // eslint-disable-next-line\r\n        window.localStorage.setItem(this.props.data.id, '{ \"name\":'+ '\"' + nameInput + '\"' +', \"url\":'+ '\"' + urlInput + '\"' +', \"color\":'+ '\"' + color + '\"' +', \"id\": ' + '\"' + this.props.data.id + '\"' +', \"folder\": \"'+ folderInput +'\"}')\r\n    }\r\n\r\n    removeItem = () => {\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var picker = document.querySelector('.sketch-picker')\r\n        \r\n        window.localStorage.removeItem(this.props.data.id)\r\n\r\n        this.props.updateLinksState()\r\n\r\n        modal.classList.remove('modal-active')\r\n        picker.style.display = 'none'\r\n    }\r\n}\r\n\r\nexport default QuickLinkEdit;","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { validateFolder } from '../../actions/formValidator'\r\nimport { returnLastFolder } from '../../actions/storageActions'\r\n\r\nclass NewFolder extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.closeModal} className=\"modal-new-folder\">\r\n                <div className=\"new-folder-modal\">\r\n                    <div className=\"new-folder-modal-content\">\r\n                        <div className=\"modal-w\">\r\n                            {this.modalColors()}\r\n                            <h1 className=\"head-w\">Add Folder</h1>\r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                                <div className=\"input-w\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" name=\"name\" className=\"input-name input\" placeholder=\"Example\" type=\"text\"/>\r\n                                </div>\r\n                            </div>                   \r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                                <div className=\"input-w\">\r\n                                    <input onFocus={this.showColors} onChange={this.handleInput} autoComplete=\"off\" name=\"color\" className=\"input-color input\" placeholder=\"#E32018\" type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\".btn-container-w\">\r\n                            <div onClick={this.addFolder} className=\"btn-w f-w\">Add Folder</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        color: ''\r\n    }\r\n\r\n    modalColors = () => <SketchPicker color={this.state.folderColor} onChangeComplete = { this.handleColor }/>\r\n\r\n    toggleModal = () => document.querySelector('.modal-new-folder').classList.toggle('modal-active')\r\n\r\n    closeModal = (e) => e.target === document.querySelector('.modal-new-folder') ? document.querySelector('.modal-new-folder').classList.toggle('modal-active') : null\r\n\r\n    handleInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    getLastItems = () => returnLastFolder() < 1 ? 0 : Math.max.apply(Math, returnLastFolder())\r\n\r\n    addFolder = () => {\r\n        var {name, color} = this.state\r\n\r\n        if(validateFolder(name, color)){\r\n            localStorage.setItem('folder' + (this.getLastItems() + 1), '{\"name\": \"'+ name +'\", \"color\": \"'+ color +'\", \"id\": \"folder'+ (this.getLastItems() + 1) +'\"}')\r\n            this.toggleModal()\r\n        }\r\n\r\n        this.props.updateState()\r\n    }\r\n}\r\n\r\nexport default NewFolder;","import React, { Component } from 'react';\r\n\r\nimport { validateFolder } from '../../actions/formValidator'\r\n\r\nclass EditFolder extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.closeModal} className=\"modal-edit-folder\">\r\n                <div className=\"edit-folder-modal\">\r\n                    <div className=\"edit-folder-modal-content\">\r\n                        <div className=\"modal-w\">\r\n                            <h1 className=\"head-w\">Edit Folder</h1>\r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\" htmlFor=\"name\">Name</label>\r\n                                <div className=\"input-w\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" name=\"name\" className=\"edit-folder-name input\" placeholder=\"Example\" type=\"text\"/>\r\n                                </div>\r\n                            </div>                   \r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\" htmlFor=\"colors\">Color</label>\r\n\r\n                                <div className=\"input-w\">\r\n                                    <input onFocus={this.showColors} onChange={this.handleInput} autoComplete=\"off\" name=\"color\" className=\"edit-folder-color input\" placeholder=\"#E32018\" type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"btn-container-w\">\r\n                            <div onClick={this.removeFolder} className=\"btn-w\">Remove Folder</div>\r\n                            <div onClick={this.editFolder} className=\"btn-w\">Edit Folder</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    handleInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    toggleModal = () => document.querySelector('.modal-edit-folder').classList.toggle('modal-active')\r\n\r\n    closeModal = (e) => e.target === document.querySelector('.modal-edit-folder') ? document.querySelector('.modal-edit-folder').classList.toggle('modal-active') : null\r\n\r\n    editFolder = () => {\r\n        var nameInput = document.querySelector(\".edit-folder-name\").value\r\n        var colorInput = document.querySelector(\".edit-folder-color\").value\r\n        var id = this.props.folderId\r\n\r\n        if(validateFolder(nameInput, colorInput)){\r\n            localStorage.setItem(id, '{\"name\": \"'+ nameInput +'\", \"color\": \"'+ colorInput +'\", \"id\": \"'+ id +'\"}')\r\n            this.toggleModal()\r\n        }\r\n\r\n        this.props.updateState()\r\n    }\r\n\r\n    removeFolder = () => {\r\n        var id = this.props.folderId\r\n        var folderItems = []\r\n\r\n        localStorage.removeItem(id)  \r\n\r\n        for(var data in localStorage){\r\n            if(data.includes('item')){\r\n                folderItems.push(JSON.parse(localStorage.getItem(data)))\r\n                folderItems.forEach(item => {\r\n                    if(item.folder === id){\r\n                        localStorage.removeItem(item.id)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.toggleModal()\r\n        this.props.updateState()\r\n    }\r\n}\r\n\r\nexport default EditFolder;","import React, { Component } from 'react';\r\n\r\n//Components\r\nimport NewFolder from './Modals/NewFolderModal'\r\nimport EditFolder from './Modals/EditFolderModal'\r\n\r\n//Images\r\nimport Arrow from '../assets/CollapseArrow.svg'\r\nimport OptionButton from \"../assets/OptionButton.svg\"\r\n\r\n//Actions\r\nimport { returnFolders } from \"../actions/storageActions\"\r\n\r\nclass Folders extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-folders\">\r\n                <NewFolder updateState={this.props.updateLinksState}/>\r\n                <EditFolder updateState={this.props.updateLinksState} folderId={this.state.idToEdit}/>\r\n\r\n                <div className=\"sec-folders sec-folders-disabled\">\r\n                    <span className=\"quick-label head-w\">Folders</span>     \r\n                    <div className=\"folder-main-container\">\r\n                        <div className=\"folder-container\">\r\n                            <div onClick={() => this.props.setCurrentFolder('default')} data-id=\"default\" style={{backgroundColor: '#5f5f5f'}} className=\"folder-item\">\r\n                                <div className=\"folder-let\">\r\n                                    <span className=\"folder-let-ind\">M</span>\r\n                                </div>\r\n\r\n                                <span className=\"folder-name\">Main</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.drawFolders()}\r\n\r\n                        <div className=\"folder-container\">\r\n                            <div data-id=\"new-folder\" onClick={this.toggleModal} className=\"folder-item empty-folder\">\r\n                                <div className=\"folder-let folder-empty-let\">\r\n                                    <span className=\"folder-let-ind\">+</span>\r\n                                </div>\r\n\r\n                                <span className=\"folder-name folder-empty-name\">New Folder</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={this.collapseFolders} className=\"expand-div\"><img className=\"collapse-arrow collapse-arrow-active\" src={Arrow} alt=\"\"/></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    drawFolders = () => {\r\n        return returnFolders().map(itemDet => {\r\n            var { name, color, id } = itemDet\r\n            \r\n            return (\r\n                <div key={id} className=\"folder-container\">\r\n                    <div onClick={() => this.props.setCurrentFolder(id)} data-id={id} style={{backgroundColor: color}} className=\"folder-item\">\r\n                        <div className=\"folder-let\">\r\n                            <span className=\"folder-let-ind\">{name.substr(0,1).toUpperCase()}</span>\r\n                        </div>\r\n\r\n                        <span className=\"folder-name\">{name}</span>\r\n                    </div>\r\n                    <img onClick={this.toggleEditModal} data-id={id} className=\"item-option-btn folder-option-btn\" src={OptionButton} alt=\"\"/>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    toggleModal = () => document.querySelector('.modal-new-folder').classList.toggle('modal-active')\r\n\r\n    collapseFolders = () => {\r\n        var folders = document.querySelector('.sec-folders')\r\n        var arrow = document.querySelector('.collapse-arrow')\r\n        \r\n        folders.classList.toggle('sec-folders-disabled')\r\n        arrow.classList.toggle('collapse-arrow-active')\r\n    }\r\n\r\n    toggleEditModal = (e) => {\r\n        var modal = document.querySelector('.modal-edit-folder')\r\n        var id = e.target.dataset.id\r\n        var {name, color} = JSON.parse(localStorage.getItem(id))\r\n        var inputName = document.querySelector('.edit-folder-name')\r\n        var inputColor = document.querySelector('.edit-folder-color')\r\n        \r\n        this.setState({\r\n            ...this.state,\r\n            idToEdit: id\r\n        })\r\n\r\n        inputName.value = name\r\n        inputColor.value = color\r\n\r\n        modal.classList.toggle('modal-active')\r\n    }\r\n}\r\n\r\nexport default Folders;","import React, { Component } from 'react';\r\nimport p from 'parse-string-data'\r\nimport Cookies from 'js-cookie'\r\nimport Masonry from 'react-masonry-component';\r\n\r\n//Components\r\nimport QuickLinkModal from './Modals/QuickLinkSettingModal'\r\nimport QuickLinkEdit from './Modals/QuickLinkEditModal'\r\nimport Folders from './Folders'\r\n\r\n//Images\r\nimport OptionButton from \"../assets/OptionButton.svg\";\r\n\r\n//Actions\r\nimport { returnLinks, returnLastLink } from \"../actions/storageActions\"\r\n\r\n\r\nclass QuickLinks extends Component {\r\n    render() {\r\n        window.onclick = this.closeModal\r\n        return (\r\n            <div id='QuickLinks'>\r\n                <QuickLinkEdit folders={this.getFolders} data={this.state.selectedData} lastItem={this.getLastItems()} updateLinksState={this.updateLinksState} linkColors={this.state.linkColors}/>\r\n                <QuickLinkModal folders={this.getFolders} items={this.state.items} selectedFolder={this.state.currentFolder} lastItem={this.getLastItems()} updateLinksState={this.updateLinksState} linkColors={this.state.linkColors}/>\r\n                \r\n                <Folders currentFolder={this.currentFolder} setCurrentFolder={this.setCurrentFolder} updateLinksState={this.updateLinksState}/>\r\n\r\n                <div id=\"quick-main-container\">\r\n                    <span className=\"quick-label head-w\">Quick Links</span>            \r\n                    <p className=\"label-w folder-label\">{this.setLabel(this.state.currentFolder)}</p>\r\n                    <Masonry\r\n                        elementType={'div'}\r\n                        options={this.state.masonryOptions}\r\n                        className=\"quick-container\" style={{ gridTemplateColumns: 'repeat( '+ this.initColumnNo() +', 245px )' }}>\r\n                        {this.drawContainer()}\r\n                        <div className=\"quick-item-container\">\r\n                            <div data-id=\"new-item\" onClick={this.showNewModal} className=\"quick-item empty-item\">\r\n                                <div className=\"item-let empty-let\">\r\n                                    <span className=\"let-ind\">+</span>\r\n                                </div>\r\n\r\n                                <span className=\"item-name empty-name\">Add New</span>\r\n                            </div>\r\n                        </div>\r\n                    </Masonry>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        currentFolder: 'default',\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(Cookies.get('isFirstStart') === undefined){\r\n            Cookies.set('noOfColumns', 4)\r\n        }\r\n    }\r\n\r\n    drawContainer = () => {\r\n        return returnLinks(this.state.currentFolder).map(itemDet => {\r\n            if(itemDet !== null){\r\n                return (\r\n                    <div key={itemDet.id} className=\"quick-item-container\">\r\n                        <a onClick={this.setTransition} href={itemDet.url} data-id={itemDet.id} style={{backgroundColor: itemDet.color}} className=\"quick-item\">\r\n                            <div className=\"item-let\">\r\n                                <span className=\"let-ind\">{itemDet.name.substr(0,1).toUpperCase()}</span>\r\n                            </div>\r\n                            <span className=\"item-name\">{itemDet.name}</span>\r\n                        </a>\r\n                        <img onClick={this.showEditModal} data-id=\"item\" className=\"item-option-btn\" src={OptionButton} alt=\"\"/>\r\n                    </div> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    setTransition = (e) => !e.ctrlKey ? document.querySelector('.transition-bg').style.height = '100vh' : null\r\n\r\n    setCurrentFolder = (folder) => this.setState({...this.state, currentFolder: folder,})\r\n\r\n    setLabel = () => this.state.currentFolder === 'default' ? 'Main' : JSON.parse(localStorage.getItem(this.state.currentFolder)).name\r\n\r\n    initColumnNo = () => Cookies.get('noOfColumns') > Math.floor(window.innerWidth / 245) ? Math.floor(window.innerWidth / 245) : Cookies.get('noOfColumns')\r\n\r\n    getLastItems = () => returnLastLink().items.length < 1 ? 0 : Math.max.apply(Math, returnLastLink().highestValues)\r\n\r\n\r\n    updateLinksState = () => {\r\n        var items = []\r\n\r\n        for(var data in localStorage){\r\n            if(localStorage.getItem(data) !== null){\r\n                items.push(p(localStorage.getItem(data)))\r\n            }\r\n        }\r\n\r\n        this.setState({items: items})\r\n    }\r\n\r\n    showNewModal = () => document.querySelector(\".new-item-modal\").classList.toggle('modal-active')\r\n\r\n    showEditModal = (e) => {\r\n        var modal = document.querySelector(\".edit-item-modal\")\r\n        var selectedItem = JSON.parse(localStorage.getItem(e.target.previousSibling.dataset.id))\r\n        var nameInput = document.querySelector(\".edit-name-input\")\r\n        var urlInput = document.querySelector(\".edit-url-input\")\r\n        var colorInput = document.querySelector(\".edit-colors-input\")\r\n\r\n        this.setState({\r\n            selectedData: selectedItem\r\n        })\r\n\r\n        modal.classList.add('modal-active')\r\n        nameInput.value = selectedItem.name\r\n        urlInput.value = selectedItem.url\r\n        colorInput.value = selectedItem.color\r\n    }\r\n\r\n    closeModal = (e) => {\r\n        var newModal = document.querySelector(\".new-item-modal\")\r\n        var editModal = document.querySelector(\".edit-item-modal\")\r\n        var picker = document.querySelector('.sketch-picker')\r\n        var pickerNew = document.querySelector('.new-sketch')\r\n\r\n        if(e.target === newModal || e.target === editModal){\r\n            var inputs = document.querySelectorAll(\".input\")\r\n\r\n            inputs.forEach(e => { e.value = '' });\r\n\r\n            document.querySelector(\".edit-item-modal\").classList.remove('modal-active')\r\n            document.querySelector(\".new-item-modal\").classList.remove('modal-active')\r\n            \r\n            picker.style.display = 'none'\r\n            pickerNew.style.display = 'none'\r\n        }\r\n    }\r\n}\r\n\r\nexport default QuickLinks;","const randString = (length) => {\r\n    var chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\r\n    var randomstring = ''\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        var char = Math.floor(Math.random() * chars.length);\r\n        randomstring += chars.substring(char,char+1);\r\n    }\r\n\r\n    return randomstring\r\n}\r\n\r\nexport default randString;","import firebase from '../config/fbConfig'\r\nimport randString from './randomString'\r\n\r\nconst auth = firebase.auth()\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst createNewPerson = (name, email, password) => {\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            res.updateProfile({displayName: name, photoURL: null})\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nconst loginPerson = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nconst signOutPerson = () => {\r\n    auth.signOut().then(function() {\r\n        console.log('user logged out')\r\n    }).catch(function(err) {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\nconst storeNote = (name, body, uid) => {\r\n    var currentTime = new Date().getTime();\r\n\r\n    db.collection(\"person\").doc(uid).collection('notes').add({\r\n        name: name,\r\n        content: body,\r\n        id: randString(5),\r\n        createdAt: Math.round(currentTime / 1000)\r\n    })\r\n    .then(function(res) {\r\n        console.log(\"Document written with ID: \", res);\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n}\r\n\r\nconst exportBackup = (storage) => {\r\n    db.collection(\"person\").doc(auth.currentUser.uid).set({\r\n        backup: JSON.stringify(storage)\r\n    })\r\n    .then(function(res) {\r\n        console.log(\"Document written with ID: \", res);\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n}\r\n\r\nconst importBackup = (update) => {\r\n    db.collection(\"person\").doc(auth.currentUser.uid).get().then(res => {\r\n        var items = JSON.parse(res.data().backup)\r\n        \r\n        for (var key in items) {\r\n            localStorage.setItem(key, items[key])\r\n        }\r\n\r\n        return res\r\n    })\r\n    .then(() => update())\r\n    .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n    });\r\n}\r\n\r\nexport { createNewPerson, loginPerson, signOutPerson, storeNote, exportBackup, importBackup };","import React, { Component } from 'react';\r\nimport { validateStartForm } from '../actions/formValidator'\r\nimport { createNewPerson } from '../actions/fbQuery'\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nclass FirstStart extends Component {\r\n    render() {\r\n        this.hideText()\r\n        return (\r\n            <div id='FirstStart'>\r\n                <div className=\"welcome no2\">\r\n                    <div id=\"text\">\r\n                        <h1 className=\"welcome-text\">Welcome to Monotone!</h1>\r\n                    </div>\r\n\r\n                    <div className=\"form-signup-container\">\r\n                        <form name=\"signup\">\r\n                            <h1>Sign Up</h1>\r\n                            <h2>To optimize your experience and use widgets, <br/>please, consider signing up.</h2>\r\n                            \r\n                            <div className=\"sign-label signup-name\">\r\n                                <label className=\"signup-label\" htmlFor=\"name\">User Name</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-name\" name=\"name\" type=\"text\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"sign-label signup-email\">\r\n                                <label className=\"signup-label\" htmlFor=\"email\">Email</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-email\" name=\"email\" type=\"email\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>  \r\n\r\n                            <div className=\"sign-label signup-password\">\r\n                                <label className=\"signup-label\" htmlFor=\"password\">Password</label>\r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-password\" name=\"password\" type=\"password\" required/>\r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"sign-label signup-confirm-password\">\r\n                                <label className=\"signup-label\" htmlFor=\"confirm-password\">Confirm Password</label>  \r\n                                <div className=\"signup-input sign-name\">\r\n                                    <input onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" id=\"signup-confirm\" name=\"confirm\" type=\"password\" required/>   \r\n                                    <div className=\"sign-input-border\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"signup-buttons\">\r\n                                <div onClick={this.hideStart} className=\"sign-guest-btn sign-btn\">\r\n                                    <p>Enter as Guest</p>\r\n                                </div>\r\n\r\n                                <div onClick={this.storePerson} className=\"sign-confirm-btn sign-btn\">\r\n                                    <p>Sign Up</p>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    handleInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    storePerson = () => validateStartForm(this.state) ? (createNewPerson(this.state.name, this.state.email.toLowerCase(), this.state.password), this.hideStart()) : null\r\n\r\n    hideText = () => {\r\n        setTimeout(() => {\r\n            var text = document.querySelector('.welcome-text');\r\n            var form = document.querySelector('.form-signup-container') \r\n\r\n            form.style.display = 'flex'\r\n            text.style.opacity = 0\r\n            \r\n            setTimeout(() => {\r\n                var form = document.querySelector('.form-signup-container') \r\n                form.style.opacity = 1\r\n                form.style.display = 'flex'\r\n            }, 1500)\r\n\r\n        }, 4000);\r\n    }\r\n\r\n    hideStart = () => {\r\n        var start = document.querySelector('#FirstStart') \r\n        var form = document.querySelector('.form-signup-container') \r\n        form.style.opacity = 0\r\n\r\n        setTimeout(() => {\r\n            start.style.transform = 'translateX(-100%)'\r\n\r\n            setTimeout(() => {\r\n                start.style.display = 'none'\r\n                Cookies.set('isFirstStart', false)\r\n            },2000)\r\n        },1500)\r\n    }\r\n}\r\n\r\nexport default FirstStart;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport NoteButton from \"../assets/NoteButton.svg\";\r\n\r\nclass NewNote extends Component {\r\n    render() {\r\n        return (\r\n            <div className='NewNoteButton'>\r\n                <div onClick={this.toggleModal} className=\"new-note-btn\">\r\n\t\t\t\t\t<img src={NoteButton} alt=\"\"/>\r\n\t\t\t\t</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'note-modal-inactive'\r\n            var element = document.querySelector('.AddNoteModal')\r\n            var inactive = document.querySelector('.note-modal-inactive')\r\n            var button = document.querySelector('.new-note-btn')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".AddNoteModal\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    toggleModal = () => document.querySelector('.AddNoteModal').classList.toggle('note-modal-inactive')\r\n}\r\n\r\nexport default NewNote;","import React, { Component } from 'react';\r\n\r\n//Actions\r\nimport { storeNote } from '../../actions/fbQuery'\r\nimport { checkIfNotNull } from '../../actions/formValidator'\r\n\r\nclass AddNoteModal extends Component {\r\n    render() {\r\n        return (\r\n                <div className='AddNoteModal note-modal-inactive'>\r\n                    <div className=\"modal-w\">\r\n                        <h1 className=\"head-w\">New Note</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Note Name</label>\r\n                            <div className=\"input-w input-w175\">\r\n                                <input onChange={this.handleInput} placeholder=\"Note Example\" autoComplete=\"off\" spellCheck=\"false\" name='name' type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Note Content</label>\r\n                            <div className=\"input-area-w input-a175\">\r\n                                <textarea onChange={this.handleInput} autoComplete=\"off\" spellCheck=\"false\" name='body' type=\"text\" rows=\"7\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container-w\">\r\n                        <div onClick={this.storeNote} className=\"btn-w f-w\">Add Note</div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n    handleInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    storeNote = () => {\r\n        var name = this.state.name;\r\n        var body = this.state.body;\r\n        var personId = this.props.currentPerson.uid\r\n        var modal = document.querySelector('.AddNoteModal')\r\n        \r\n        if(checkIfNotNull(name, body) === true){storeNote(name, body, personId); modal.classList.toggle('note-modal-inactive')}\r\n    }\r\n}\r\n\r\nexport default AddNoteModal;","import React, { Component } from 'react';\r\n\r\n//Actions\r\nimport { loginPerson, signOutPerson } from '../../actions/fbQuery'\r\n\r\nclass AccountModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='AccountModal account-modal-inactive'>\r\n                {this.checkIfLogged()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'account-modal-inactive'\r\n            var element = document.querySelector('.AccountModal')\r\n            var inactive = document.querySelector('.account-modal-inactive')\r\n            var button = document.querySelector('.con-login')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".AccountModal\")){\r\n                element.classList.toggle(prefix)\r\n            };\r\n        });\r\n    }\r\n\r\n    handleInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    login = () => loginPerson(this.state.email, this.state.password)\r\n\r\n    checkIfLogged = () => {\r\n        if(this.props.isLogged){\r\n            var { displayName, email } = this.props.currentPerson\r\n\r\n            return (\r\n                <div className=\"account-container\">\r\n                    <div className=\"modal-w\">\r\n                        <h1 className=\"head-w\">Account</h1>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">User</label>\r\n                            <div className=\"input-w\">\r\n                                <p className=\"text-w\">{displayName}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Email</label>\r\n                            <div className=\"input-w\">\r\n                                <p className=\"text-w\">{email}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container-w\">\r\n                        <div onClick={signOutPerson} className=\"btn-w f-w\">Sign Out</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"account-container\">\r\n                    <div className=\"modal-w\">\r\n                        <h1 className=\"head-w\">Log In</h1>\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Email</label>\r\n                            <div className=\"input-w input-w175\">\r\n                                <input onChange={this.handleInput} name=\"email\" type=\"email\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field-w\">\r\n                            <label className=\"label-w\">Password</label>\r\n                            <div className=\"input-w input-w175\">\r\n                                <input onChange={this.handleInput} name=\"password\" type=\"password\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container-w\">\r\n                        <div onClick={this.login} className=\"btn-w f-w\">Log In</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AccountModal;","import React, { Component } from 'react';\r\n\r\nclass Prompt extends Component {\r\n    render() {\r\n        var { head, label } = this.props.promptText\r\n        return (\r\n            <div className='app-prompt app-prompt-inactive'>\r\n                <div className=\"modal-w\">\r\n                    <h1 className=\"head-w\">{head}</h1>\r\n                    <div className=\"field-w\">\r\n                        <label className=\"label-w\">{label}</label>\r\n                    </div>\r\n                </div>\r\n                {this.drawButtons()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    execPrompt = (e) => {\r\n        var { fnc1, fnc2 } = this.props.promptText\r\n        var fncType = e.target.dataset.fnc\r\n        var prompt = document.querySelector('.app-prompt')\r\n        prompt.classList.toggle('app-prompt-inactive')\r\n\r\n        if(fncType === 'fnc1'){\r\n            if(fnc1){\r\n                fnc1()\r\n            }else{\r\n                return null\r\n            }\r\n        }else if(fncType === 'fnc2'){\r\n            if(fnc2){\r\n                fnc2()\r\n            }else{\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    drawButtons = () => {\r\n        var { num1, num2 } = this.props.promptText.options\r\n        \r\n        if( num2 ){\r\n            return (\r\n                <div className=\"btn-container-w\">\r\n                    <div data-fnc=\"fnc1\" onClick={this.execPrompt} className=\"btn-w\">{num1}</div>\r\n                    <div data-fnc=\"fnc2\" onClick={this.execPrompt} className=\"btn-w\">{num2}</div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"btn-container-w\">\r\n                    <div data-fnc=\"fnc1\" onClick={this.execPrompt} className=\"btn-w f-w\">{num1}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Prompt;","import React, { Component } from 'react';\r\n\r\n//Actions\r\nimport { exportBackup, importBackup } from '../../../actions/fbQuery'\r\n\r\nimport Prompt from './Prompt'\r\nimport Cookies from 'js-cookie'\r\n\r\nclass SettingsModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Settings Settings-Inactive modal-g'>\r\n                <Prompt promptText={this.state.promptText}/>\r\n\r\n                <div className=\"settings-container\">\r\n                    <div className=\"modal-w\">\r\n                        <h1 className=\"head-w\">Settings</h1>\r\n                        <div className=\"links-settings\">\r\n                            <h2 className=\"section-w\">Quick Links</h2>\r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\">Columns</label>\r\n                                <div className=\"range-w\">\r\n                                    {this.columnInput()}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\">Remove Items</label>\r\n                                \r\n                                <div className=\"remove-btns flex-w\">\r\n                                    <div data-type='selective' onClick={this.togglePrompt} className=\"button-w\">Selective</div>\r\n                                    <div data-type='remove-all' onClick={this.togglePrompt} className=\"button-w\">Remove All</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field-w\">\r\n                                <label className=\"label-w\">Backup Folders and Links</label>\r\n                                \r\n                                <div className=\"remove-btns flex-w\">\r\n                                    <div data-type='backup' onClick={this.togglePrompt} className=\"button-w\">Export</div>\r\n                                    <div data-type='restore' onClick={this.togglePrompt} className=\"button-w\">Import</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n        promptText:{\r\n            head: 'head',\r\n            label: 'label',\r\n            options: {\r\n                num1: 'num1',\r\n                num2: 'num2'\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var range = document.querySelector(\".column-range\")\r\n        range.value = Cookies.get('noOfColumns')\r\n\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'Settings-Inactive'\r\n            var element = document.querySelector('.Settings')\r\n            var inactive = document.querySelector('.Settings-Inactive')\r\n            var button = document.querySelector('.settings-icon')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".Settings\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    columnInput = () => <input onChange={this.handleRange} type=\"range\" min=\"1\" max={Math.floor(window.innerWidth / 245)} name=\"column-range\" className=\"column-range\"/>\r\n    \r\n    handleRange = (e) => {\r\n        var container = document.querySelector(\".quick-container\")\r\n\r\n        Cookies.set('noOfColumns', e.target.value)\r\n\r\n        this.props.updateState()\r\n        container.style.gridTemplateColumns = \"repeat(\"+ e.target.value +\", 245px)\"\r\n    }\r\n\r\n    togglePrompt = (e) => {\r\n        if(document.querySelector('.app-prompt-inactive')){\r\n            var prompt = document.querySelector('.app-prompt')\r\n            var type = e.target.dataset.type\r\n    \r\n            var setText = (head, label, num1, num2, fnc1, fnc2) => {\r\n                this.setState({\r\n                    promptText:{\r\n                        head: head,\r\n                        label: label,\r\n                        fnc1: fnc1,\r\n                        fnc2: fnc2,\r\n                        options: {\r\n                            num1: num1,\r\n                            num2: num2\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n    \r\n            switch(type){\r\n                case 'remove-all':\r\n                    setText('Remove All', 'Are you sure?', 'No', 'Yes', null, () => {\r\n                        localStorage.clear();\r\n                        this.props.updateState()\r\n                    })\r\n                break;\r\n    \r\n                case 'selective':\r\n                    setText('Selective Removal', 'Finish removal?', 'Finish', null, null, null)\r\n                break;\r\n\r\n                case 'backup':\r\n                    setText('Export Folders and Items', 'Are you sure?', 'No', 'Yes', null, () => exportBackup(localStorage))\r\n                break;\r\n    \r\n                case 'restore':\r\n                    setText('Import Folders and Items', 'Are you sure?', 'No', 'Yes', null, () => {                     \r\n                        importBackup(this.props.updateState)\r\n                    })\r\n                break;\r\n\r\n                default:\r\n                    return null\r\n            }\r\n    \r\n            prompt.classList.toggle('app-prompt-inactive')\r\n        }\r\n    }\r\n}\r\n\r\nexport default SettingsModal;","import React, { Component } from 'react';\r\n\r\n//Images\r\nimport ArrowIcon from '../../../assets/NoteArrow.svg'\r\n\r\nclass NotesModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Notes Notes-Inactive modal-g'>\r\n                <div className=\"notes-container\">\r\n                    <p>Notes</p>\r\n                    {this.drawNotes()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"click\", function(event) {\r\n            var prefix = 'Notes-Inactive'\r\n            var element = document.querySelector('.Notes')\r\n            var inactive = document.querySelector('.Notes-Inactive')\r\n            var button = document.querySelector('.note-icon')\r\n\r\n            if (!inactive && event.target !== button && !event.target.closest(\".Notes\")){\r\n                if(element){\r\n                    element.classList.toggle(prefix)\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    drawNotes = () => {\r\n        var notes = this.props.notes\r\n        if(notes){\r\n            if(notes.length > 0){\r\n                return notes.map(note => {\r\n                    var { name, content, id } = note\r\n                    return (\r\n                        <div key={id} className=\"note-item\">\r\n                            <div className=\"note-cell\" >\r\n                                <img data-id={id} onClick={this.showContent} className=\"note-arrow\" src={ArrowIcon} alt=\"\"/>\r\n                                <div className=\"note-title\">\r\n                                    <p>{name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div name={id} className=\"note-content\">\r\n                                <p>{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                });\r\n            }else{\r\n                return <p>No notes found.</p>\r\n            }\r\n        }else if(notes === undefined){\r\n            return <p>Loading notes...</p>\r\n        }\r\n    }\r\n\r\n    showContent = (e) => {\r\n        var id = e.target.dataset.id\r\n        var content = document.getElementsByName(id)[0]\r\n\r\n        content.classList.toggle('note-content-active')\r\n        e.target.classList.toggle('note-arrow-active')\r\n    }\r\n}\r\n\r\nexport default NotesModal;","import React, { Component } from 'react';\nimport Cookies from 'js-cookie'\nimport firebase from './config/fbConfig'\n\n//Components\nimport Navbar from './components/Navbar'\nimport Sidebar from './components/Sidebar'\nimport QuickLinks from './components/QuickLinks'\nimport FirstStart from './components/FirstStart'\nimport NewNote from './components/NewNote'\nimport AddNoteModal from './components/Modals/AddNoteModal'\n\n//Modals\nimport AccountModal from './components/Modals/AccountModal'\nimport SettingsModal from './components/Modals/SidebarModals/Settings'\nimport NotesModal from './components/Modals/SidebarModals/Notes'\n\nconst db = firebase.firestore();\n\nclass App extends Component {\n\trender() {\n\t\tthis.drawIfFirstStart()\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* General */}\n\t\t\t\t{this.drawIfFirstStart()}\n\t\t\t\t<Navbar isLogged={this.state.isLogged} currentPerson={this.state.currentPerson} isVisible={this.state.sidebarVisible} showSidebar={this.showSidebar}/>\n\t\t\t\t<Sidebar isVisible={this.state.sidebarVisible}/>\n\t\t\t\t<QuickLinks/>\n\t\t\t\t<AddNoteModal currentPerson={this.state.currentPerson}/>\n\n\t\t\t\t{/* Modals */}\n\t\t\t\t<AccountModal isLogged={this.state.isLogged} currentPerson={this.state.currentPerson} />\n\n\t\t\t\t{/* Sidebar Modals */}\n\t\t\t\t<SettingsModal updateState={this.updateState}/>\n\t\t\t\t<NotesModal notes={this.state.currentNotes}/>\n\t\t\t\t{this.showNoteButtonIfLogged()}\n\t\t\t\t\n\n\t\t\t\t{/* Transition */}\n\t\t\t\t<div className=\"transition-bg\"></div>\n\t\t\t</div>\t\t\t\n\t\t);\n\t}\n\n\tstate = {\n\t\t'sidebarVisible': 'inactive',\n\t}\n\n\tcomponentDidMount = () => {\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user){\n\t\t\t\tvar { email, emailVerified, uid, isAnonymous, displayName } = user\n\t\t\t\tvar notesCollection = db.collection('person').doc(uid).collection('notes').orderBy('createdAt', 'desc')\n\t\t\t\t\n\t\t\t\tnotesCollection.onSnapshot(res => {\n\t\t\t\t\tvar notes = [];\n\t\t\t\t\tres.forEach(data => {\n\t\t\t\t\t\tnotes.push(data.data())\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\tcurrentNotes: notes\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\tthis.setState({\n\t\t\t\t\t...this.state,\n\t\t\t\t\tisLogged: true,\n\t\t\t\t\tcurrentPerson: {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\temailVerified,\n\t\t\t\t\t\tuid,\n\t\t\t\t\t\tisAnonymous,\n\t\t\t\t\t\tdisplayName,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLogged: false\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tdrawIfFirstStart = () => Cookies.get('isFirstStart') === undefined ? <FirstStart/> : null\n\n\tshowSidebar = () => this.state.sidebarVisible === 'inactive' ? this.setState({'sidebarVisible': 'active'}) : this.setState({'sidebarVisible': 'inactive'})\n\n\tupdateState = () => this.setState({...this.state})\n\n\tshowNoteButtonIfLogged = () => this.state.isLogged ? <NewNote isLogged={this.state.isLogged} currentPerson={this.state.currentPerson}/> : null\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/Main.css';\nimport './styles/App.css';\nimport './styles/Navbar.css';\nimport './styles/QLModal.css';\nimport './styles/QuickLinks.css';\nimport './styles/Sidebar.css';\nimport './styles/FirstStart.css';\nimport './styles/SettingsModal.css';\nimport './styles/AccountModal.css';\nimport './styles/NewNoteModal.css';\nimport './styles/NotesModal.css';\nimport './styles/Prefixes.css';\nimport './styles/Folders.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/OptionButton.e5d1adcb.svg\";"],"sourceRoot":""}